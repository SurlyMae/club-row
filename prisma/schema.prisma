// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  email     String   @unique
  password  String
  // user can have many events
  events    Event[]
}

// event can have many schedules (ie. repeating events)
// it's the combination of event and schedule that makes it unique
model Event {
  id          Int             @id @default(autoincrement())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  name        String          @unique
  type        EventType       @relation(fields: [eventTypeId], references: [id])
  eventTypeId Int
  //events can have many users
  users       User[]
  //events can have many schedules
  schedules   EventSchedule[]
}

// admin should be able to CRUD schedules
// admin should be able to attach a schedule to an event
// this could be an expensive join to repeatedly make - may want to denormalize / store schedule info on Event object?
model EventSchedule {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  //schedule can belong to many events (think recurring weekly rows)
  events    Event[]
  // what else needs to be on the schedule model? 
  // recurrent type like 'daily' or 'weekly'?
  // start date, end date, days of the week ... might need an event schedule type (daily, weekly)
  // maybe we move the event type to connect through event schedule instead. ie eventScheduleType instead of eventType
  // start time, end time, 
  // how do we keep users from having to enter the same schedule info over and over?
  // what is the easiest way for a user to say, 'add the same event for every Tuesday at 6 and every saturday at 8?'
  // and what is the most performant way for a user to search by 'events in the next month' or 'events in x timeframe'?
}

//may not even need eventType, might be overcomplicating
//but event type could give a way to sort - would a user search for events by recurring vs not?
//"show all recurring events"
model EventType {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  type      String
  //event type can belong to many events
  events    Event[]
}
